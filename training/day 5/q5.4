Q4 Define following 

   a. Atomic data types / Primary data types 
   b. Secondary data type / User Defined Data Type 

a. Atomic Data Types/Primary Data Types:
Atomic data types, also known as primary data types, are fundamental data types provided by programming languages. These types represent basic, indivisible pieces of data and usually have a fixed size. Common examples of atomic data types include:
- Integer: Represents whole numbers (e.g., 1, 10, -5).
- Float/Double: Represents decimal numbers with fractional parts (e.g., 3.14, 2.71828).
- Boolean: Represents either true or false.
- Character: Represents a single character (e.g., 'a', 'Z', '@').

b. Secondary Data Type/User-Defined Data Type:
Secondary data types, also known as user-defined data types, are created by the programmer using the existing atomic or primary data types. These types are built upon the atomic data types and allow for more complex structures. Examples of secondary/user-defined data types include:
- Arrays: A collection of elements of the same type.
- Structures/Classes: A composite data type that combines multiple variables of different types into a single entity.
- Enumerations: A set of named values representing a specific set of possible options.
- Pointers: A data type that stores memory addresses of other variables.

